esphome:
  name: fb1
  friendly_name: fb1

esp32:
  board: esp32-c6-devkitc-1
  variant: esp32c6
  flash_size: 4MB
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "T2 Fallback Hotspot"
    password: "nqs9K4bLLP9Q"

captive_portal:

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  port: 1883

# -------------------------
# Remote MQTT control of LEDs
# -------------------------
  on_json_message:
    - topic: fire4/led/clean
      then:
        - switch.toggle: green_led_switch

    - topic: fire4/led/code_blue
      then:
        - switch.toggle: blue_led_switch
        - switch.turn_on: white_led_switch

    - topic: fire4/led/in_use
      then:
        - switch.toggle: red_led_switch

    - topic: fire4/led/lights
      then:
        - switch.toggle: white_led_switch

# -------------------------
# RFID over SPI
# -------------------------
spi:
  clk_pin: GPIO23  # SCK
  mosi_pin: GPIO22 # MOSI
  miso_pin: GPIO21 # MISO 

rc522_spi:
  cs_pin: GPIO19 # SDA/ CS
  update_interval: 1s
  on_tag:
    then:
      - mqtt.publish:
          topic: fire4/rfid/tag
          payload: !lambda 'return x;'
      - logger.log:
          format: "Tag detected: %s"
          args: [ 'x.c_str()' ]

# -------------------------
# DHT11 Temperature & Humidity Sensor
# -------------------------
sensor:
  - platform: dht
    pin: GPIO14
    model: DHT11
    temperature:
      name: "Room Temperature"
      id: room_temp
      unit_of_measurement: "°C"
      accuracy_decimals: 1
      on_value:
        then:
          - mqtt.publish:
              topic: nursecall/temperature
              payload: !lambda 'return str_sprintf("%.1f °C", x);'
    humidity:
      name: "Room Humidity"
      id: room_humidity
      unit_of_measurement: "%"
      accuracy_decimals: 1
      on_value:
        then:
          - mqtt.publish:
              topic: nursecall/humidity
              payload: !lambda 'return str_sprintf("%.1f %%", x);'
    update_interval: 10s

# -------------------------
# LED Outputs (pins updated to avoid SPI/DHT)
# -------------------------
output:
  - platform: gpio
    pin: GPIO3
    id: green_led

  - platform: gpio
    pin: GPIO6
    id: blue_led

  - platform: gpio
    pin: GPIO4
    id: red_led

  - platform: gpio
    pin: GPIO7
    id: white_led

# -------------------------
# Switches with MQTT state updates
# -------------------------
switch:
  - platform: output
    id: green_led_switch
    output: green_led
    name: "Green LED - Clean"
    restore_mode: ALWAYS_OFF
    on_turn_on:
      - mqtt.publish:
          topic: fire4/led/clean/state
          payload: "ON"
    on_turn_off:
      - mqtt.publish:
          topic: fire4/led/clean/state
          payload: "OFF"

  - platform: output
    id: blue_led_switch
    output: blue_led
    name: "Blue LED - Code Blue"
    restore_mode: ALWAYS_OFF
    on_turn_on:
      - mqtt.publish:
          topic: fire4/led/code_blue/state
          payload: "ON"
    on_turn_off:
      - mqtt.publish:
          topic: fire4/led/code_blue/state
          payload: "OFF"

  - platform: output
    id: red_led_switch
    output: red_led
    name: "Red LED - In Use"
    restore_mode: ALWAYS_OFF
    on_turn_on:
      - mqtt.publish:
          topic: fire4/led/in_use/state
          payload: "ON"
    on_turn_off:
      - mqtt.publish:
          topic: fire4/led/in_use/state
          payload: "OFF"

  - platform: output
    id: white_led_switch
    output: white_led
    name: "White LED - Lights"
    restore_mode: ALWAYS_OFF
    on_turn_on:
      - mqtt.publish:
          topic: fire4/led/lights/state
          payload: "ON"
    on_turn_off:
      - mqtt.publish:
          topic: fire4/led/lights/state
          payload: "OFF"

# -------------------------
# Buttons to toggle each LED
# -------------------------
binary_sensor:
  - platform: gpio
    pin: 
      number: GPIO16
      mode: INPUT_PULLUP
      inverted: true
    name: "Button - Clean"
    internal: true
    on_press:
      then:
        - switch.toggle: green_led_switch

  - platform: gpio
    pin: 
      number: GPIO17
      mode: INPUT_PULLUP
      inverted: true
    name: "Button - Code Blue"
    internal: true
    on_press:
      then:
        - switch.toggle: blue_led_switch
        - switch.turn_on: white_led_switch

  - platform: gpio
    pin: 
      number: GPIO8
      mode: INPUT_PULLUP
      inverted: true
    name: "Button - In Use"
    internal: true
    on_press:
      then:
        - switch.toggle: red_led_switch

  - platform: gpio
    pin: 
      number: GPIO18
      mode: INPUT_PULLUP
      inverted: true
    name: "Button - Lights"
    internal: true
    on_press:
      then:
        - switch.toggle: white_led_switch
