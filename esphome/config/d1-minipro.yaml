esphome:
  name: d1-minipro
  friendly_name: D1-MiniPro

esp8266:
  board: d1_mini_pro

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: 192.168.5.141

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "D1-Minipro Fallback Hotspot"
    password: "qwYvKpZxm8N6"

mqtt:
  broker: !secret mqtt_broker
  port: 1883
  username: !secret mqtt_username
  password: !secret mqtt_password

captive_portal:

# LED outputs
# Outputs
output:
  - platform: gpio
    pin: D1
    id: code_blue_led
  - platform: gpio
    pin: D2
    id: nurse_call_led

# Flashing scripts
script:
  - id: flash_codeblue
    mode: restart
    then:
      - while:
          condition:
            switch.is_on: code_blue_switch
          then:
            - output.turn_on: code_blue_led
            - delay: 500ms
            - output.turn_off: code_blue_led
            - delay: 500ms

  - id: flash_nursecall
    mode: restart
    then:
      - while:
          condition:
            switch.is_on: nurse_call_switch
          then:
            - output.turn_on: nurse_call_led
            - delay: 500ms
            - output.turn_off: nurse_call_led
            - delay: 500ms

# Switches (MQTT-controllable)
switch:
  - platform: template
    name: "Code Blue LED"
    id: code_blue_switch
    optimistic: true
    restore_mode: ALWAYS_OFF
    on_turn_on:
      - script.execute: flash_codeblue
    on_turn_off:
      - script.stop: flash_codeblue
      - output.turn_off: code_blue_led
      - mqtt.publish:
          topic: nursecall/codeblue
          payload: "acknowledged"

  - platform: template
    name: "Nurse Call LED"
    id: nurse_call_switch
    optimistic: true
    restore_mode: ALWAYS_OFF
    on_turn_on:
      - script.execute: flash_nursecall
    on_turn_off:
      - script.stop: flash_nursecall
      - output.turn_off: nurse_call_led
      - mqtt.publish:
          topic: nursecall/nursecall
          payload: "acknowledged"

# Buttons
binary_sensor:
  - platform: gpio
    pin:
      number: D5
      mode: INPUT_PULLUP
    name: "Code Blue Button"
    id: code_blue_button
    on_press:
      - switch.turn_on: code_blue_switch
      - mqtt.publish:
          topic: nursecall/codeblue
          payload: "activated"

  - platform: gpio
    pin:
      number: D6
      mode: INPUT_PULLUP
    name: "Nurse Call Button"
    id: nurse_call_button
    on_press:
      - switch.turn_on: nurse_call_switch
      - mqtt.publish:
          topic: nursecall/nursecall
          payload: "activated"

# Temperature + Humidity Sensor (DHT11)
# sensor:
#   - platform: dht
#     pin: D3
#     model: DHT11
#     temperature:
#       name: "Room Temperature"
#       id: room_temp
#       unit_of_measurement: "째C"
#       accuracy_decimals: 1
#       on_value:
#         then:
#           - mqtt.publish:
#               topic: nursecall/temperature
#               payload: !lambda 'return (to_string(roundf(x * 10.0) / 10.0) + " 째C");'
#     humidity:
#       name: "Room Humidity"
#       id: room_humidity
#       unit_of_measurement: "%"
#       accuracy_decimals: 1
#       on_value:
#         then:
#           - mqtt.publish:
#               topic: nursecall/humidity
#               payload: !lambda 'return (to_string(roundf(x * 10.0) / 10.0) + " %");'
#     update_interval: 30s
sensor:
  - platform: dht
    pin: D3
    model: DHT11
    temperature:
      name: "Room Temperature"
      id: room_temp
      unit_of_measurement: "째C"
      accuracy_decimals: 1
      on_value:
        then:
          - mqtt.publish:
              topic: nursecall/temperature
              payload: !lambda 'return str_sprintf("%.1f 째C", x);'
    humidity:
      name: "Room Humidity"
      id: room_humidity
      unit_of_measurement: "%"
      accuracy_decimals: 1
      on_value:
        then:
          - mqtt.publish:
              topic: nursecall/humidity
              payload: !lambda 'return str_sprintf("%.1f %%", x);'
    update_interval: 30s

